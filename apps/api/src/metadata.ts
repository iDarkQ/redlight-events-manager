/* eslint-disable */
export default async () => {
    const t = {
        ["./user/dto/participant.dto"]: await import("./user/dto/participant.dto"),
        ["./user/dto/user.dto"]: await import("./user/dto/user.dto"),
        ["./event/dto/event.dto"]: await import("./event/dto/event.dto")
    };
    return { "@nestjs/swagger": { "models": [[import("./user/dto/create-user.dto"), { "CreateUserDto": { name: { required: true, type: () => String }, email: { required: true, type: () => String, format: "email" }, password: { required: true, type: () => String }, birthday: { required: true, type: () => Date } } }], [import("./user/dto/login-user.dto"), { "LoginUserDto": { email: { required: true, type: () => String, format: "email" }, password: { required: true, type: () => String } } }], [import("./user/dto/authorization-user.dto"), { "AuthorizeUserDto": { token: { required: true, type: () => String } } }], [import("./user/dto/jwt-token-response.dto"), { "JwtTokenResponse": { token: { required: true, type: () => String } } }], [import("./user/dto/user.dto"), { "UserDto": { id: { required: true, type: () => String, description: "Unique identifier of the user", example: "ckv9p34s50000svef8bl7w2gb" }, name: { required: true, type: () => String, description: "Name of the user", example: "John Doe" }, email: { required: true, type: () => String, description: "Email address of the user", example: "john.doe@example.com", format: "email" }, role: { required: true, type: () => String, description: "Role of the user", example: "admin" }, profile: { required: true, type: () => String, description: "Profile description or URL of the user", example: "https://example.com/profile/johndoe" }, birthday: { required: true, type: () => Date, description: "Birthday of the user", example: "1990-01-01T00:00:00.000Z" } } }], [import("./event/dto/create-event.dto"), { "CreateEventDto": { title: { required: true, type: () => String }, description: { required: true, type: () => String }, date: { required: true, type: () => Date }, type: { required: true, type: () => String }, maxParticipants: { required: true, type: () => Number }, latitude: { required: true, type: () => Number }, longitude: { required: true, type: () => Number }, creatorId: { required: true, type: () => String }, location: { required: true, type: () => String } }, "CreateEventRequestDto": { title: { required: true, type: () => String }, description: { required: true, type: () => String }, date: { required: true, type: () => Date }, type: { required: true, type: () => String }, maxParticipants: { required: true, type: () => Number }, latitude: { required: true, type: () => Number }, longitude: { required: true, type: () => Number }, location: { required: true, type: () => String } } }], [import("./event/dto/update-event.dto"), { "UpdateEventDto": { title: { required: false, type: () => String }, description: { required: false, type: () => String }, date: { required: false, type: () => Date }, type: { required: false, type: () => String }, maxParticipants: { required: false, type: () => Number }, latitude: { required: false, type: () => Number }, longitude: { required: false, type: () => Number }, location: { required: false, type: () => String } } }], [import("./user/dto/participant.dto"), { "ParticipantDto": { id: { required: true, type: () => String, description: "Unique identifier of the participant", example: "user1" }, name: { required: true, type: () => String, description: "Name of the participant", example: "Alice" } } }], [import("./event/dto/event.dto"), { "EventDto": { id: { required: true, type: () => String, description: "Unique identifier of the event", example: "ckv9p34s50000svef8bl7w2gb" }, title: { required: true, type: () => String, description: "Title of the event", example: "Annual Meetup" }, description: { required: true, type: () => String, description: "Description of the event", example: "A gathering for all members." }, createdAt: { required: true, type: () => Date, description: "Date when the event was created", example: "2024-06-25T12:00:00.000Z" }, date: { required: true, type: () => Date, description: "Date of the event", example: "2024-07-01T18:00:00.000Z" }, type: { required: true, type: () => String, description: "Type of the event", example: "MEETING" }, maxParticipants: { required: true, type: () => Number, description: "Maximum number of participants", example: 100 }, creatorId: { required: true, type: () => String, description: "ID of the event creator", example: "user1" }, status: { required: true, type: () => Object, description: "Status of the event", example: "PLANNED" }, longitude: { required: true, type: () => Number, description: "Longitude of the event location", example: 19.9449799 }, latitude: { required: true, type: () => Number, description: "Latitude of the event location", example: 50.0646501 }, location: { required: true, type: () => String, description: "Name of the event location" } } }], [import("./event/dto/leave-event.dto"), { "LeaveEventDto": { userId: { required: false, type: () => String } } }], [import("./event/entities/event.entity"), { "Event": {} }], [import("./user/entities/user.entity"), { "User": {} }]], "controllers": [[import("./user/user.controller"), { "UserController": { "signUp": { type: Object }, "signIn": { type: Object }, "authorize": { type: t["./user/dto/user.dto"].UserDto } } }], [import("./event/event.controller"), { "EventController": { "create": { type: t["./event/dto/event.dto"].EventDto }, "findAll": { type: [Object] }, "findOne": { type: Object }, "update": { type: t["./event/dto/event.dto"].EventDto }, "join": { type: t["./event/dto/event.dto"].EventDto }, "leave": { type: t["./event/dto/event.dto"].EventDto }, "remove": {} } }]] } };
};